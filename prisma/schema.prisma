// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String   @db.VarChar(150)
  nickname   String   @db.VarChar(20)
  passwd     String
  curation   Curation @relation(fields: [curationId], references: [id])
  curationId Int
  createdAt  DateTime @default(now())

  @@unique([curationId]) // 수정: unique_curationId를 @unique로 변경
}

model Curation {
  id                Int       @id @default(autoincrement())
  nickname          String
  passwd            String
  content           String
  trendy            Int       @default(0)
  personality       Int       @default(0)
  practicality      Int       @default(0)
  costEffectiveness Int       @default(0)
  createdAt         DateTime  @default(now())
  style             Style     @relation(fields: [styleId], references: [id])
  styleId           Int
  comments          Comment[] // 1:N 관계
}

model Style {
  id                Int        @id @default(autoincrement())
  name              String
  title             String
  description       String?
  content           String?
  imageUrl          String?
  thumbnail         String?
  nickname          String
  viewCount         Int        @default(0)
  curationCount     Int        @default(0)
  trendy            Int        @default(0)
  personality       Int        @default(0)
  practicality      Int        @default(0)
  costEffectiveness Int        @default(0)
  categories        Category[]
  tags              Tag[]      @relation("StyleTags") // 다대다 관계
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  Curation          Curation[]
}

model Category {
  id        Int      @id @default(autoincrement())
  type      String
  name      String
  brand     String?
  price     Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  styleId Int
  style   Style @relation(fields: [styleId], references: [id])
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  styles Style[] @relation("StyleTags") // 다대다 관계
}
